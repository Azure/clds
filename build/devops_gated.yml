name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
resources:
- repo: self
jobs:
- job: windowsx64debug
  displayName: 'Build Windows x64 Debug'
  pool:
    name: Hosted VS2017
    demands:
    - Cmd
    - msbuild
    - visualstudio

  steps:
  - checkout: self
    clean: false

  - task: BatchScript@1
    displayName: 'Git submodule update'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'submodule update --init --force'

  - task: BatchScript@1
    displayName: 'Git submodule clean'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'submodule foreach --recursive "git clean -xdf"'

  - task: BatchScript@1
    displayName: 'Git clean'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'clean -xdf'

  - powershell: |
     $url = "https://github.com/KindDragon/vld/releases/download/v2.5.1/vld-2.5.1-setup.exe"
     $outpath = "$(System.ArtifactsDirectory)/vld-2.5.1-setup.exe"
   
     $wc = New-Object System.Net.WebClient
     $wc.DownloadFile($url, $outpath)
    displayName: 'Download VLD'

  - task: BatchScript@1
    displayName: 'Install VLD'
    inputs:
      filename: '$(System.ArtifactsDirectory)/vld-2.5.1-setup.exe'
      arguments: '/suppressmsgboxes /verysilent /norestart'
      modifyEnvironment: true

  - task: BatchScript@1
    displayName: 'Set VLD path'
    inputs:
      filename: 'set_vld_vars.bat'
      modifyEnvironment: true

  - task: BatchScript@1
    displayName: 'Setup VS Vars'
    inputs:
      filename: '"c:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\Tools\VsDevCmd.bat"'
      modifyEnvironment: true

  - task: NuGetToolInstaller@0
    displayName: 'Use NuGet 4.3.0 (required for .NET core assemblies)'

  - task: CMake@1
    displayName: 'CMake .. -Drun_unittests:bool=ON -Drun_int_tests:bool=ON -Duse_cppunittest:bool=OFF -Drun_e2e_tests:bool=OFF -G "Visual Studio 15 2017 Win64"'
    inputs:
      workingDirectory: 'build_x64'
      cmakeArgs: '.. -Drun_unittests:bool=ON -Drun_int_tests:bool=ON -Duse_cppunittest:bool=OFF -Drun_e2e_tests:bool=OFF -G "Visual Studio 15 2017 Win64"'

  - task: VSBuild@1
    displayName: 'Build solution build_x64\*.sln'
    inputs:
      solution: 'build_x64\*.sln'
      msbuildArgs: '/t:restore /t:build /p:ForceImportBeforeCppTargets=$(Build.SourcesDirectory)/vld.props'
      platform: x64
      configuration: Debug
      maximumCpuCount: true

  - task: CmdLine@1
    displayName: 'Run ctest'
    inputs:
      filename: ctest
      arguments: '-C "Debug" -V --output-on-failure'
      workingFolder: 'build_x64'

- job: windowsx86relwithdebinfo
  displayName: 'Build Windows x86 RelWithDebInfo'
  pool:
    name: Hosted VS2017
    demands:
    - Cmd
    - msbuild
    - visualstudio
    - vstest

  steps:
  - task: BatchScript@1
    displayName: 'Git submodule update'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'submodule update --init --force'

  - task: BatchScript@1
    displayName: 'Git submodule clean'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'submodule foreach --recursive "git clean -xdf"'

  - task: BatchScript@1
    displayName: 'Git clean'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'clean -xdf'

  - task: BatchScript@1
    displayName: 'Setup VS Vars'
    inputs:
      filename: '"c:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\Tools\VsDevCmd.bat"'
      modifyEnvironment: true

  - task: NuGetToolInstaller@0
    displayName: 'Use NuGet 4.3.0 (required for .NET core assemblies)'

  - task: CMake@1
    displayName: 'CMake ..'
    inputs:
      workingDirectory: 'build_x86'
      cmakeArgs: '.. -Drun_unittests:bool=ON -Drun_int_tests:bool=ON -Drun_e2e_tests:bool=ON -Duse_cppunittest:bool=ON'

  - task: VSBuild@1
    displayName: 'Build solution build_x86\*.sln'
    inputs:
      solution: 'build_x86\*.sln'
      platform: Win32
      msbuildArgs: '/t:restore /t:build /p:ForceImportBeforeCppTargets=$(Build.SourcesDirectory)/vld.props'
      configuration: RelWithDebInfo
      maximumCpuCount: true

  - task: VSTest@2
    displayName: 'VsTest - testAssemblies'
    inputs:
      testAssemblyVer2: |
          build_x86\**\*_ut_*.dll
          build_x86\**\*_int_*.dll
          !**\obj\**
      vsTestVersion: 15.0
      runTestsInIsolation: true

- job: windowsx86debug
  displayName: 'Build Windows x86 Debug'
  pool:
    name: Hosted VS2017
    demands:
    - Cmd
    - msbuild
    - visualstudio

  steps:
  - task: BatchScript@1
    displayName: 'Git submodule update'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'submodule update --init --force'

  - task: BatchScript@1
    displayName: 'Git submodule clean'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'submodule foreach --recursive "git clean -xdf"'

  - task: BatchScript@1
    displayName: 'Git clean'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'clean -xdf'

  - powershell: |
     $url = "https://github.com/KindDragon/vld/releases/download/v2.5.1/vld-2.5.1-setup.exe"
     $outpath = "$(System.ArtifactsDirectory)/vld-2.5.1-setup.exe"
     
     $wc = New-Object System.Net.WebClient
     $wc.DownloadFile($url, $outpath)
    displayName: 'Download VLD'

  - task: BatchScript@1
    displayName: 'Install VLD copy'
    inputs:
      filename: '$(System.ArtifactsDirectory)/vld-2.5.1-setup.exe'
      arguments: '/suppressmsgboxes /verysilent /norestart'
      modifyEnvironment: true

  - task: BatchScript@1
    displayName: 'Set VLD path'
    inputs:
      filename: 'set_vld_vars.bat'
      modifyEnvironment: true

  - task: BatchScript@1
    displayName: 'Setup VS Vars'
    inputs:
      filename: '"c:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\Tools\VsDevCmd.bat"'
      modifyEnvironment: true

  - task: NuGetToolInstaller@0
    displayName: 'Use NuGet 4.3.0 (required for .NET core assemblies)'

  - task: CMake@1
    displayName: CMake
    inputs:
      workingDirectory: 'build_x86'
      cmakeArgs: '.. -Drun_unittests:bool=ON -Drun_int_tests:bool=ON -Drun_e2e_tests:bool=ON'

  - task: VSBuild@1
    displayName: 'Build solution build_x86\*.sln'
    inputs:
      solution: 'build_x86\*.sln'
      platform: Win32
      msbuildArgs: '/t:restore /t:build /p:ForceImportBeforeCppTargets=$(Build.SourcesDirectory)/vld.props'
      configuration: Debug
      maximumCpuCount: true

  - task: CmdLine@1
    displayName: 'Run ctest'
    inputs:
      filename: ctest
      arguments: '-C "Debug" -V --output-on-failure'
      workingFolder: 'build_x86'
      
- job: Traceability
  pool:
    name: Hosted VS2017
    demands:
    - Cmd
    - msbuild
    - visualstudio

  steps:
  - task: BatchScript@1
    displayName: 'Git submodule update'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'submodule update --init --force deps/azure-c-build-tools'

  - task: BatchScript@1
    displayName: 'Git submodule clean'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'submodule foreach --recursive "git clean -xdff"'

  - task: BatchScript@1
    displayName: 'Git clean'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'clean -xdff'

  - task: BatchScript@1
    displayName: 'Setup VS Vars'
    inputs:
      filename: '"c:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\Tools\VsDevCmd.bat"'
      modifyEnvironment: true

  - task: CMake@1
    displayName: CMake
    inputs:
      workingDirectory: 'build'
      cmakeArgs: '.. -Ax64'

  - task: VSBuild@1
    displayName: 'Build traceabilitytool only'
    inputs:
      solution: 'build\azure_c_util.sln'
      vsVersion: 16.0
      platform: x64
      configuration: RelWithDebInfo
      msbuildArgs: '/t:restore /t:traceabilitytool'
      clean: true
      maximumCpuCount: true

  - task: BatchScript@1
    displayName: 'Run traceability tool'
    inputs:
      filename: 'build/deps/azure-c-build-tools/traceabilitytool/RelWithDebInfo/traceabilitytool.exe'
      arguments: '-i $(Build.SourcesDirectory) -buildcheck -e deps'
      modifyEnvironment: false
      workingFolder: '$(Build.SourcesDirectory)'
      
- job: windowsperf
  displayName: 'Build Windows Perf tests (RelWithDebInfo x64)'
  pool:
    name: Hosted VS2017
    demands:
    - Cmd
    - msbuild
    - visualstudio

  steps:
  - task: BatchScript@1
    displayName: 'Git submodule update'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'submodule update --init --force'

  - task: BatchScript@1
    displayName: 'Git submodule clean'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'submodule foreach --recursive "git clean -xdf"'

  - task: BatchScript@1
    displayName: 'Git clean'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'clean -xdf'

  - task: BatchScript@1
    displayName: 'Setup VS Vars'
    inputs:
      filename: '"c:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\Common7\Tools\VsDevCmd.bat"'
      modifyEnvironment: true

  - task: NuGetToolInstaller@0
    displayName: 'Use NuGet 4.3.0 (required for .NET core assemblies)'

  - task: CMake@1
    displayName: CMake
    inputs:
      workingDirectory: 'build_x64'
      cmakeArgs: '.. -Drun_int_tests:bool=ON -Drun_traceability:bool=OFF -G "Visual Studio 15 2017 Win64"'

  - task: VSBuild@1
    displayName: 'Build solution build_x64\*.sln'
    inputs:
      solution: 'build_x64\*.sln'
      platform: x64
      msbuildArgs: '/t:restore /t:build /p:ForceImportBeforeCppTargets=$(Build.SourcesDirectory)/vld.props'
      configuration: RelWithDebInfo
      maximumCpuCount: true

  - script: |
     echo Running Hash table perf test
     $(Build.Repository.LocalPath)/build_x64/tests/clds_hash_table_perf/RelWithDebInfo/clds_hash_table_perf.exe
     
     echo Running Singly linked list perf test
     $(Build.Repository.LocalPath)/build_x64/tests/clds_singly_linked_list_perf/RelWithDebInfo/clds_singly_linked_list_perf.exe
     
     echo Running Sorted list perf test
     $(Build.Repository.LocalPath)/build_x64/tests/clds_sorted_list_perf/RelWithDebInfo/clds_sorted_list_perf.exe

     echo Running Lock free set perf test
     $(Build.Repository.LocalPath)/build_x64/tests/lock_free_set_perf/RelWithDebInfo/lock_free_set_perf.exe
     
    workingDirectory: 'build_x64'
    displayName: 'Run perf tests'

- job: linuxubuntu
  displayName: 'Build Linux Ubuntu 16.04'
  pool:
    name: Hosted Ubuntu 1604

  steps:
  - bash: |
      sudo apt-get update
      sudo apt-get install build-essential pkg-config git cmake uuid-dev valgrind
    displayName: 'Bash Script'

  - bash: |
     pushd $(Build.Repository.LocalPath)
     git submodule update --init
     git submodule foreach --recursive "git clean -xdff"
     git clean -xdff
     popd
    workingDirectory: '$(Build.Repository.LocalPath)'
    displayName: 'git submodule update and clean'

  - task: Bash@3
    displayName: 'Build and run tests'
    inputs:
      targetType: filePath
      filePath: './build/linux/build_linux.sh'
      arguments: '$(Build.Repository.LocalPath)'
      workingDirectory: '$(Build.Repository.LocalPath)'
