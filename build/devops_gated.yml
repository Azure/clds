name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
resources:
  repositories:
  - repository: self
    clean: true
  - repository: c_build_tools
    type: github
    name: azure/c-build-tools
    endpoint: github.com_azure
    ref: refs/heads/master
jobs:
- template: /pipeline_templates/build_all_flavors.yml@c_build_tools
  parameters:
    GBALLOC_LL_TYPE_VALUES: ["PASSTHROUGH", "JEMALLOC"]

- template: /pipeline_templates/codeql3000_default.yml@c_build_tools

- job: windowsperf
  displayName: 'Build Windows Perf tests (RelWithDebInfo x64, custom script)'
  pool:
    name: Azure-MessagingStore-WinBuildPoolVS2022
    demands:
    - Build
    - Cmd
    - msbuild
    - visualstudio

  steps:
  - task: BatchScript@1
    displayName: 'Git submodule update'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'submodule update --init --force'

  - task: BatchScript@1
    displayName: 'Git submodule clean'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'submodule foreach --recursive "git clean -xdf"'

  - task: BatchScript@1
    displayName: 'Git clean'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'clean -xdf'

  - task: BatchScript@1
    displayName: 'Setup VS Vars'
    inputs:
      filename: '"c:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"'
      modifyEnvironment: true

  - task: CMake@1
    displayName: CMake
    inputs:
      workingDirectory: 'build_x64'
      cmakeArgs: '.. -Drun_perf_tests:bool=ON -Drun_traceability:bool=OFF -G "Visual Studio 17 2022"  -DCMAKE_BUILD_TYPE=RelWithDebInfo -Ax64'

  - task: VSBuild@1
    displayName: 'Build solution build_x64\*.sln'
    inputs:
      solution: 'build_x64\*.sln'
      platform: x64
      msbuildArgs: '/t:restore /t:build'
      configuration: RelWithDebInfo
      maximumCpuCount: true

  - script: |
     echo Running Hash table perf test
     $(Build.Repository.LocalPath)/build_x64/RelWithDebInfo/clds_hash_table_perf.exe

    workingDirectory: 'build_x64'
    displayName: 'Run clds_hash_table_perf tests'

  - script: |
     echo Running Singly linked list perf test
     $(Build.Repository.LocalPath)/build_x64/RelWithDebInfo/clds_singly_linked_list_perf.exe

    workingDirectory: 'build_x64'
    displayName: 'Run clds_singly_linked_list_perf tests'

  - script: |
     echo Running Sorted list perf test
     $(Build.Repository.LocalPath)/build_x64/RelWithDebInfo/clds_sorted_list_perf.exe

    workingDirectory: 'build_x64'
    displayName: 'Run clds_sorted_list_perf tests'

  - script: |
     echo Running Lock free set perf test
     $(Build.Repository.LocalPath)/build_x64/RelWithDebInfo/lock_free_set_perf.exe

    workingDirectory: 'build_x64'
    displayName: 'Run lock_free_set_perf tests'

  - task: CmdLine@1
    displayName: 'Run ctest tests - Perf'
    inputs:
      filename: ctest
      arguments: '-C "RelWithDebInfo" -V --output-on-failure -R perf'
      workingFolder: 'build_x64'

- job: linuxubuntu
  displayName: 'Build Linux Ubuntu'
  pool:
    name: Azure-MsgStore-Linux2204BuildMachinePool
    demands:
      - linux

  steps:
  - bash: |
     pushd $(Build.Repository.LocalPath)
     git submodule update --init
     git submodule foreach --recursive "git clean -xdff"
     git clean -xdff
     popd
    workingDirectory: '$(Build.Repository.LocalPath)'
    displayName: 'git submodule update and clean'

  - task: Bash@3
    displayName: 'Build and run tests'
    inputs:
      targetType: filePath
      filePath: './build/linux/build_linux.sh'
      arguments: '$(Build.Repository.LocalPath)'
      workingDirectory: '$(Build.Repository.LocalPath)'
